# 30 June 2024 - Koch
- everything stopped working
- have to redownload everything and start over
- From what I recall, here are the main changes that need to be made:
1. Clock Speed + taking out the code that allows it to transmit out of the while loop (causes transmitter to blink at clock rate)
2. Turn off all other LEDs
3. Disable Automatic Antenna Tuning
4. Mess with NFC stuff so that it isn't modulating the transmitter to find receivers (A, B, F, A2P, etc. types)

Steps taken:
1. Make transmit always (code from example = flash transmit => change the duration from 1000U to 0U in demoIni function
^current power consumption = 286mA w our antenna, no change when receiving
^ 279mA w board antenna, 256mA when receiving 

2. Cut down most of the demoCycle() func in ndef_demo.c, all we need is this: 
"
void demoCycle( void )
{
    rfalNfcWorker();                                    /* Run RFAL worker periodically */

    rfalNfcDiscover( &discParam );

}
"
^current power consumption = 290mA w our antenna, 285mA when receiving
^277mA w board antenna, 254mA when receiving

3. Reset clock speed to 2MHz!
^ 273mA, 248mA (receiving) => board antenna
^276mA our antenna (no change when RX)

4. reduced the "switch" & computing needed
^267mA our antenna

# 28 June 2024 - Koch
- Changed clock speed from 48MHz to 4MHz
- OG code w our antenna = ~285mA (disconnecting NFC board completely = ~160mA
- OG code w board antenna = ~260mA (245mA when receiving)

- My code w our antenna = ~260mA (no change when receiving)
- My code w board antenna = ~235mA (218mA when receiving)

- Need to look into disabling the automatic antenna tuning (30% decrease in power consumption is expected between board antenna and our antenna, but this didn't happen)

DISABLED AAT: ( i think?: check w LED) - confirmed with LED-A on NFC
- My code w our antenna = 255mA (no change when receiving)
- My code w board antenna = 240mA (218mA when receiving)


# 26 June 2024 - Koch
- LED on (LD2) on its own is drawing 150-160 mA. Will try low power modes to see wha the lowest in this config is

# 24 June 2024 - Koch
- Use nrf52840 chip/breakout board for last data transfer out of the Nucleo to maybe app for a scheduled periodic data transfer using BLE
- ^ https://www.digikey.com/en/products/detail/nordic-semiconductor-asa/NRF52-DK/5773879?utm_adgroup=&utm_source=google&utm_medium=cpc&utm_campaign=Pmax_Shopping_Boston%20Metro%20Category%20Awareness&utm_term=&utm_content=&utm_id=go_cmp-20837509568_adg-_ad-__dev-c_ext-_prd-5773879_sig-Cj0KCQjwsuSzBhCLARIsAIcdLm7UDqaU0WyxALgY1tEPw8WQZheSsQKdwU77cH-YrnaKeQ1BBDgvPC0aAteCEALw_wcB&gad_source=1&gclid=Cj0KCQjwsuSzBhCLARIsAIcdLm7UDqaU0WyxALgY1tEPw8WQZheSsQKdwU77cH-YrnaKeQ1BBDgvPC0aAteCEALw_wcB
- Work on testing out low power modes + make sure that there is a decrease in current draw with each change in code
- Good vid for low power modes: https://www.youtube.com/watch?v=2V2h64cduzE
- IDD PINS NOT TRUSTWORTHY! IDD pins measured ~15mA while hooking up a current meter in series showed ~175mA consumption for the old code. 
- My Code: oscillating between 6mA -> 120mA for some reason? but still less than 175mA = hope. picture in phone of graph
- getting rid of all I2C related code only to use SPI for data comm. Didn't rlly change power consumption from "always on my code" setup
- the file that is actually being run is the "demo_polling.c" - modify duration of transmission under "discParam.totalDuration        = 0U;" = aka 0ms off


TESTED: 
- Old Code: 175mA
- My Code (with 1sec turn off/on): 6mA -> 120mA oscillating; prob has to do with Nucleo being powered off every 1 second (red LED on Nucleo blinks!) = hope that low power modes can get us to reduce power?
- My Code with no turn off (always transmitting): 185mA BUT when the receiving coil is brought into field, current consumption drops to 160mA


# 23 June 2024 - Edgerton Makerspace
- Looking into low power modes and example code stuff
- Tried to make the currently used main.c to work from my end but didnt work
- Found new example code that blinks the transmitter: https://www.st.com/en/embedded-software/stsw-st25r-lib.html?dl=redirect
- Got the TX to turn on!!! Currently takes 9mA (as shown in vid) + receiving antenna has ~.4V across resistor
- Will try to cut down excess code that is being run + try low power modes
- Maybe try this helloworld? https://github.com/stm32duino/X-NUCLEO-NFC08A1
- Looks like just transmitting power requires 1mA? Need to continue looking

# 22 June 2024 - Edgerton Makerspace
Notes:
- There are some arduino libraries compatable with NFC reader: https://www.arduino.cc/reference/en/libraries/stm32duino-x-nucleo-nfc04a1/
- useful for the future: https://store.particle.io/ : allows programming of the externam device completely remotely (no need to plug into microcontroller to reprogram it)
- ESP32 highly suggested (edgerton Jonathan) to get started with bc it has buit in WiFi + Bluetooth capabilities
- Instructable for programming Nucleo with Arduino IDE: https://www.instructables.com/Quick-Start-to-STM-Nucleo-on-Arduino-IDE/
- successful blinky LED!!! https://microdigisoft.com/getting-started-stm32cube-programmer-blink-led/
- ^ Video!!~

# 21 June 2024
Notes:
- Can use Nucleo-64 (L476RG) with Arduino Uno Rev3 (supposedly): question remains: can we use NFC with Arduino instead of with Nucleo
- Can use Nucleo-32 with Arduino Nano (question remains as above)
- Exists a configuration code setup in order to get the Nucleo board to only use muA of current
- Can get MCU to draw .1 - 5 muA in "stop2" mode: https://community.st.com/t5/stm32-mcus-products/nucleo-stm32l412rb-p-how-to-measure-idd-only-through-stm32/td-p/142433
- More details about which pins can be disabled for low-power modes: https://www.st.com/resource/en/reference_manual/rm0351-stm32l47xxx-stm32l48xxx-stm32l49xxx-and-stm32l4axxx-advanced-armbased-32bit-mcus-stmicroelectronics.pdf
- Code examples for low-power modes! https://forum.digikey.com/t/low-power-modes-on-the-stm32l0-series/13306

ACTION PLAN: 
- Try different low power modes to see if power can still be transferred to the NFC bc if this is the case, then take new Nucleo board with no previous solders (caps to GND, etc.) and program MCU into stop2 (or whichever low power mode) -> ensure that none of the caps/res remain necessary -> make breakout board with only the truly necessary connections
- Measure current consumption of these low power modes (single digit micro amps or ~50 muA is acceptable: translates to 10-12 days of charging)
- probe all minimum assembly pins to check signal + manipulate signal to test impact on output


# 19 June 2024
- familiar with ST microprocessor families
- determined current task
- Useful YT: https://www.youtube.com/watch?v=rfBeq-Fu0hc
- smaller half of the Nucleo is a built-in programmer (instead of needing to use a STM32CubeProgrammer)
- Could use BluePill ST board instead of the Nucleo (is smaller + has less functionality - only has the procressor on it)
- Identify minimum system config for the NFC

Notes:
STM32F = mainstream microcontroller
STM32L = Low Power (power efficient)
STM32H = High performance

Dev Boards:
Nucleo(-32, -64, -144) = corresponds to #pins on the baord
BluePill = STM32F103C8T6
- has arduino support (aka use Arduino IDE to program)
- has only microcontroller on it, no extra bells/whistles

ST32 Programming workflow: 
1. STM32CubeMX = set initial config for registers
2. STM32CubeIDE
3. get code from IDE -> Microcontroller
